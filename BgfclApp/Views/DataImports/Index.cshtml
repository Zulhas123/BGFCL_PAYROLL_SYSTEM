@{
    ViewData["Title"] = "Data Import";
}

<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" rel="stylesheet">
<style>
    /* Dropdown Style Enhancements */
    .custom-dropdown {
        border-radius: 0 0.375rem 0.375rem 0;
        transition: border-color 0.2s, box-shadow 0.2s;
    }

        .custom-dropdown:focus {
            border-color: #0d6efd;
            box-shadow: 0 0 0 0.2rem rgba(13, 110, 253, 0.25);
            outline: none;
        }

</style>
<div class="container mt-5">
    <div class="row">
        <!-- Left: Form Area -->
        <div class="col-md-6">
            <div class="card shadow-sm">
                <div class="card-header bg-light border-bottom">
                    <h5 class="mb-0 fw-bold">📥 Data Import</h5>
                </div>
                <div class="card-body">
                    <!-- Table Selection -->
                    <div class="mb-3">
                        <label for="dataType" class="form-label fw-semibold">📋 Select Table</label>
                        <div class="input-group shadow-sm">
                            <span class="input-group-text bg-white border-end-0">
                                <i class="bi bi-table"></i>
                            </span>
                            <select id="dataType" class="form-select custom-dropdown">
                                <option value="1">👤 Employee</option>
                                <option value="2">🎓 Designation</option>
                                <option value="3">🔐 Role</option>
                                <option value="4">🏢 Department</option>
                            </select>
                        </div>
                    </div>


                    <!-- File Upload -->
                    <div class="mb-3">
                        <label for="excelFileInput" class="form-label fw-semibold">Choose Excel File</label>
                        <input type="file" id="excelFileInput" class="form-control" />
                    </div>

                    <!-- Download Sample File -->
                    <div class="mb-3">
                        <label class="form-label fw-semibold">Need Help?</label>
                        <a id="downloadSample" class="btn btn-outline-primary w-100" href="#" download>
                            ⬇️ Download Sample Excel
                        </a>
                    </div>

                    <!-- Import Button -->
                    <button id="importBtn" class="btn btn-success w-100 fw-semibold">
                        🚀 Import Now
                    </button>
                </div>
            </div>
        </div>

        <!-- Right: Instruction Panel -->
        @* <div class="col-md-6"> *@
        @*     <div class="card border-0 bg-light p-3" id="instructionPanel"> *@
        @*         <h6 class="fw-bold">📌 Instructions</h6> *@
        @*         <div id="instructionText" class="text-secondary small"> *@
        @*             Select a table to view import instructions here... *@
        @*         </div> *@
        @*     </div> *@
        @* </div> *@
    </div>
</div>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.18.5/xlsx.full.min.js"></script>
    <script type="text/javascript" src="~/js/dataImport/DataImport.js"></script>

    <script>
        $(document).ready(function () {
            const fileMap = {
                "1": {
                    file: "Employee_Import_Sample.xlsx",
                    name: "Employee",
                    instructions: `
                        - Make sure all required fields are filled in.
                        - Use valid email formats.
                        - Date format should be YYYY-MM-DD.
                        - Avoid duplicate Employee IDs.`
                },
                "2": {
                    file: "Designation_Import_Sample.xlsx",
                    name: "Designation",
                    instructions: `
                        - Designation names should be unique.
                        - Description is optional.
                        - No special characters in designation name.`
                },
                "3": {
                    file: "Role_Import_Sample.xlsx",
                    name: "Role",
                    instructions: `
                        - Define unique roles.
                        - Assign role level (e.g., Admin = 1).
                        - Keep names under 50 characters.`
                },
                "4": {
                    file: "Department_Import_Sample.xlsx",
                    name: "Department",
                    instructions: `
                        - Department code should be unique.
                        - Avoid blank rows.
                        - Use consistent naming for departments.`
                }
            };

            function updateSampleLinkAndInstructions() {
                const selectedValue = $('#dataType').val();
                const selectedItem = fileMap[selectedValue];
                if (selectedItem) {
                    $('#downloadSample')
                        .attr('href', `/sampleExcels/${selectedItem.file}`)
                        .text(`⬇️ Download ${selectedItem.name} Sample`);

                    $('#instructionText').html(selectedItem.instructions.replaceAll('\n', '<br>'));
                } else {
                    $('#downloadSample').attr('href', '#').text('Download Sample Excel');
                    $('#instructionText').html('Select a table to view import instructions here...');
                }
            }

            // Initial setup
            updateSampleLinkAndInstructions();

            $('#dataType').on('change', updateSampleLinkAndInstructions);

            // Load any needed initial data
            loadInitialData();
        });

        function loadInitialData() {
            $.ajax({
                url: '/api/Employees/GetEmployeeTypes',
                type: 'GET',
                dataType: 'json',
                success: function (responseObject) {
                    let employeeTypes = responseObject.data;
                    $('#EmployeeTypeId').empty().append('<option value="0">Select One</option>');
                    $.each(employeeTypes, function (_, item) {
                        if (![3, 4].includes(item.id)) {
                            $('#EmployeeTypeId').append(`<option value=${item.id}>${item.employeeTypeName}</option>`);
                        }
                    });
                },
                error: function (err) {
                    console.error('Error loading employee types:', err);
                }
            });
        }
    </script>
}
